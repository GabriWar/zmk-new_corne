#define ZMK_POINTING_DEFAULT_MOVE_VAL 800  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        L0 {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T                                             &msc SCRL_UP                     &kp Y        &kp U  &kp I         &kp O    &kp P     &kp BSPC
&td0       &kp A  &kp S  &kp D     &kp F  &kp G                             &msc SCRL_LEFT  &mkp MCLK       &msc SCRL_RIGHT  &kp H        &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B               &kp C_MUTE                    &msc SCRL_DOWN                   &kp N        &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp ESCAPE
                         &kp LGUI  &mo 4  &mt LEFT_ALT SPACE                                                                 &lt 3 ENTER  &mo 1  &lt 2 DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        L1 {
            display-name = "SYM/MOUSE";
            bindings = <
&trans  &kp EXCL  &kp AT     &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &trans    &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans    &trans     &none      &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &trans     &trans     &kp SPACE                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        L2 {
            bindings = <
&kp APOS  &kp NUMBER_1    &kp NUMBER_2    &kp NUMBER_3     &kp NUMBER_4  &kp N5                    &trans          &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0        &trans
&trans    &trans          &kp UP_ARROW    &trans           &trans        &trans            &trans  &trans  &trans  &kp PLUS      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ASTERISK  &kp SLASH
&trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans        &trans  &trans            &trans          &kp MINUS     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp COMMA     &kp PERIOD
                                          &trans           &trans        &trans                                    &trans        &trans        &trans
            >;

            label = "NUM/ARROWS";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        L3 {
            display-name = "FN/MEDIA";
            bindings = <
&kp F1  &kp F2  &kp F3     &kp F4     &kp F5     &kp F6                                        &kp LC(LG(UP_ARROW))                          &kp F7     &kp F8           &kp F9            &kp F10          &kp F11   &kp F12
&trans  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB4                &kp C_BRIGHTNESS_DEC  &kp LG(F1)              &kp C_BRIGHTNESS_INC  &mkp RCLK  &kp C_PREVIOUS   &kp C_PLAY_PAUSE  &kp C_NEXT       &kp HOME  &kp PAGE_UP
&trans  &trans  &trans     &trans     &kp INS    &mkp MB5  &kp C_MUTE                          &kp LC(LG(DOWN_ARROW))                        &mkp MCLK  &kp PRINTSCREEN  &kp SCROLLLOCK    &kp PAUSE_BREAK  &kp END   &kp PAGE_DOWN
                           &trans     &trans     &trans                                                                                      &trans     &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        L4 {
            display-name = "CONF/MACRO";
            bindings = <
&bt BT_NXT  &bt BT_PRV       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3                                   &mmv MOVE_UP                     &sys_reset      &out OUT_BLE  &out OUT_USB    &kp F13  &kp F14  &kp F17
&trans      &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &bootloader                    &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader     &kp K_POWER   &soft_off       &kp F16  &kp F17  &kp F18
&trans      &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &kp C_MUTE                    &mmv MOVE_DOWN                   &studio_unlock  &bt BT_CLR    &bt BT_CLR_ALL  &kp F19  &kp F20  &kp F21
                                              &trans           &trans           &trans                                                                          &trans          &trans        &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };
    };
};
