#define ZMK_POINTING_DEFAULT_MOVE_VAL 1000  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T                                            &msc SCRL_UP                     &kp Y        &kp U  &kp I         &kp O    &kp P     &kp BSPC
&td0       &kp A  &kp S  &kp D     &kp F  &kp G                            &msc SCRL_LEFT  &mkp MCLK       &msc SCRL_RIGHT  &kp H        &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B               &kp SPACE                    &msc SCRL_DOWN                   &kp N        &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp ESCAPE
                         &kp LGUI  &mo 1  &mt LEFT_ALT SPACE                                                                &lt 3 ENTER  &mo 2  &lt 4 DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&bt BT_NXT  &bt BT_PRV       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3                                                     &mmv MOVE_UP                     &kp N7        &kp N8        &kp N9        &kp COMMA  &kp DOT   &kp BSPC
&trans      &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_COLOR_HSB(188,100,50)                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SLASH  &kp HOME  &kp PG_UP
&trans      &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_TOG                    &kp C_MUTE                    &mmv MOVE_DOWN                   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0     &kp END   &kp PG_DN
                                              &trans           &trans           &trans                                                                                            &kp INS       &kp DEL       &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                                &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &trans        &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &kp LG(F1)                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &trans     &trans     &kp SPACE                                                                 &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "FN";
            bindings = <
&kp F1          &kp F2      &kp F3     &kp F4     &kp F5     &kp F6                                  &mmv MOVE_UP                     &kp F7  &kp F8     &kp F9     &kp F10     &kp F11          &kp F12
&studio_unlock  &trans      &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK   &kp PRINTSCREEN  &trans
&trans          &sys_reset  &trans     &trans     &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans  &trans     &trans     &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                       &trans     &trans     &trans                                                                   &trans  &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&kp APOS  &kp NUMBER_1    &kp NUMBER_2    &kp NUMBER_3     &kp NUMBER_4  &kp N5                         &trans          &kp NUMBER_6  &kp N7          &kp N8  &kp N9  &kp N0  &key_repeat
&trans    &trans          &kp UP_ARROW    &trans           &trans        &soft_off              &trans  &trans  &trans  &soft_off     &bt BT_CLR      &trans  &trans  &trans  &trans
&trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans        &bootloader  &trans            &trans          &bootloader   &bt BT_CLR_ALL  &trans  &trans  &trans  &trans
                                          &trans           &trans        &trans                                         &trans        &trans          &trans
            >;

            label = "ARROWS";
            sensor-bindings = <&rgb_encoder>;
        };
    };
};
